import os
import librosa
import soundfile as sf
import pandas as pd
from tqdm import tqdm

# ==== C·∫•u h√¨nh ====
data_dir = r"C:\Users\souva\OneDrive\Documents\DUT_PROJECT\PBL6-TEST\data_train"
save_dir = r"C:\Users\souva\OneDrive\Documents\DUT_PROJECT\PBL6-TEST\features"
os.makedirs(save_dir, exist_ok=True)

# ==== H√†m x·ª≠ l√Ω 1 t·∫≠p d·ªØ li·ªáu (train / val / test) ====
def process_split(split_name):
    split_dir = os.path.join(data_dir, split_name)
    rows = []

    if not os.path.exists(split_dir):
        print(f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c: {split_dir}")
        return

    for label in tqdm(os.listdir(split_dir), desc=f"üìÇ ƒêang x·ª≠ l√Ω {split_name}"):
        label_dir = os.path.join(split_dir, label)
        if not os.path.isdir(label_dir):
            continue

        for file in os.listdir(label_dir):
            if file.lower().endswith(".wav"):
                src_path = os.path.join(label_dir, file)
                try:
                    # ƒê·ªçc file √¢m thanh v√† √©p v·ªÅ 16kHz, mono
                    y, sr = librosa.load(src_path, sr=16000, mono=True)
                    y = librosa.util.normalize(y)

                    # Th∆∞ m·ª•c l∆∞u file ƒë√£ x·ª≠ l√Ω
                    save_subdir = os.path.join(save_dir, split_name, label)
                    os.makedirs(save_subdir, exist_ok=True)
                    save_path = os.path.join(save_subdir, file)

                    # L∆∞u file
                    sf.write(save_path, y, 16000, subtype='PCM_16')

                    # L∆∞u th√¥ng tin v√†o danh s√°ch
                    rows.append({
                        "path": save_path,
                        "text": label
                    })

                except Exception as e:
                    print(f"‚ö†Ô∏è L·ªói khi x·ª≠ l√Ω {src_path}: {e}")

    # Ghi file CSV cho t·∫≠p n√†y
    df = pd.DataFrame(rows)
    csv_path = os.path.join(save_dir, f"{split_name}.csv")
    df.to_csv(csv_path, index=False, encoding="utf-8-sig")
    print(f"‚úÖ ƒê√£ t·∫°o {csv_path} ({len(df)} m·∫´u)")

# ==== Ch·∫°y cho t·ª´ng t·∫≠p ====
for split in ["train", "val", "test"]:
    process_split(split)

print("üéØ Ho√†n t·∫•t to√†n b·ªô ti·ªÅn x·ª≠ l√Ω!")
