import sounddevice as sd
import numpy as np
import scipy.io.wavfile as wav
import os
import glob
import time

def record(filename, duration=2, fs=16000):
    """Ghi √¢m v√† l∆∞u file WAV"""
    print("üé§ B·∫Øt ƒë·∫ßu ghi √¢m ...")
    audio = sd.rec(int(duration * fs), samplerate=fs, channels=1, dtype='int16')
    sd.wait()
    wav.write(filename, fs, audio)
    print("‚úÖ ƒê√£ l∆∞u:", filename)
    return audio

labels = ["batDen", "tatDen", "batQuat", "tatQuat", "tatTatCa", "batTatCa"]

# T·∫°o th∆∞ m·ª•c cho t·ª´ng nh√£n
for label in labels:
    os.makedirs(f"data/{label}", exist_ok=True)

def next_filename(label, base="data"):
    """T√¨m t√™n file ti·∫øp theo kh√¥ng b·ªã tr√πng"""
    folder = f"{base}/{label}"
    files = glob.glob(f"{folder}/sample*.wav")

    indices = []
    for f in files:
        try:
            num = int(os.path.basename(f).replace("sample", "").replace(".wav", ""))
            indices.append(num)
        except:
            pass

    next_index = max(indices) + 1 if indices else 1
    return f"{folder}/sample{next_index}.wav"

def check_audio_quality(audio, min_amplitude=0.1):
    """Ki·ªÉm tra ch·∫•t l∆∞·ª£ng √¢m thanh"""
    if np.max(np.abs(audio)) < min_amplitude:
        return False
    return True

def batch_record(label, num_samples=30, duration=2):
    """Thu th·∫≠p nhi·ªÅu m·∫´u li√™n t·ª•c"""
    print(f"=== B·∫Øt ƒë·∫ßu ghi {num_samples} m·∫´u cho nh√£n '{label}' ===")
    for i in range(num_samples):
        print(f"\nüéß M·∫´u {i+1}/{num_samples}")
        filename = next_filename(label)
        while True:
            audio = record(filename, duration=duration)
            if check_audio_quality(audio):
                break
            print("‚ö†Ô∏è √Çm l∆∞·ª£ng qu√° nh·ªè, vui l√≤ng th·ª≠ l·∫°i")
        time.sleep(0.5)  # ngh·ªâ 0.5s gi·ªØa c√°c m·∫´u (ƒë·ª° b·ªã ch·ªìng √¢m)
    print("‚úÖ Ho√†n t·∫•t ghi √¢m t·∫•t c·∫£ m·∫´u!")

if __name__ == "__main__":
    label = "tatQuat"   # ƒë·ªïi label khi c·∫ßn
    batch_record(label)
